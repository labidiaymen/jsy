{
  "name": "jsy",
  "filename": "jsy.min.js",
  "version": "0.0.23",
  "description": "A lightweight JavaScript Library contains the missing javascript functions, and make your code readable.",
  "homepage": "http://labidiaymen.github.io/jsy/",
  "authors": [
    "Labidi Aymen <labidiaymen@outlook.com>"
  ],
  "keywords": [
    "jsy",
    "jsyjs"
  ],
  "repositories": [
    {
      "type": "git",
      "url": "git+https://github.com/labidiaymen/jsy.git"
    }
  ],
  "license": "MIT",
  "autoupdate": {
    "source": "git",
    "target": "git@github.com:labidiaymen/jsy.git",
    "basePath": "",
    "files": [
      "jsy.js",
      "jsy.min.js"
    ]
  },
  "readme": "### Jsy make Javascript coding more fun\nThere is a difference between readble code and non readble, it's easly to read and memory, Jsy make your code clean and readble.\n\nExemple : \n\nWithout jsy \n```javascript\nvar email= \"labidiaymen@outlook.com\"; \nvar re = /^([\\w-]+(?:\\.[\\w-]+)*)@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$/i;\nif(re.test(email)){\n console.log('valid email');\n}\n\n```\n\nWith jsy\n \n```javascript\nvar email= \"labidiaymen@outlook.com\"; \nif(_jsy(email).isEmail()){\n  console.log('valid email');\n}\n\n```\n\nEven more :\n\n```javascript\nvar email= \"labidiaymen@outlook.com\";   \n_jsy(email).ifisEmail().log('valid email');\n```\n\n\n##Documentation\n\nDetermine the internal variable class.\n```javascript\n.getType()\n```\n\n```javascript\n//exemple : alert the type of name\nvar name = \"aymen\";\nalert(_jsy(name).getType());\n\n```\n\nDetermine the internal variable class.\n```javascript\n.ifType()\n```\n```javascript\n//example : alert name if the type is equal to 'string'\nvar name = \"jhon\";\n_jsy(name).ifType('string').alert();\n\n```\n\ncheck if the internal varible is  **Array**\n```javascript\n.isArray()\n```\n```javascript\n//example : alert true if numbers is Array\nvar numbers = [1,2,3,4];\nalert(_jsy(numbers).isArray());\n```\n\ncheck if **x** in the internal variable (**Array**)\n```javascript\n.inArray(x)\n```\n```javascript\n//example : alert true if the number 3 is in the Array\nvar numbers = [1,2,3,4];\nalert(_jsy(numbers).inArray(3));\n```\n\nreturn true if the internal variable is empty\n```javascript\n.isEmpty()\n```\n```javascript\n//example : alert true if the variable emptyobject is empty\nvar emptyobject= {};\nalert(_jsy(emptyobject).isEmpty());\n```\n\nrun function if the internal variable is empty\n```javascript\n.ifisEmpty()\n```\n```javascript\n//example : alert 'object is empty' if the variable emptyobject is empty\nvar emptyobject= {};\n_jsy(emptyobject).ifisEmpty().alert('object is empty');\n```\nreturn true if the internal variable is float\n\n```javascript\n.isFloat()\n```\n\n```javascript\n//example: alert true if x is float\nvar x = 9.3 ;\nalert(_jsy(x).isFloat());\n```\nrun function if the internal variable is float\n\n```javascript\n.ifisFloat()\n```\n```javascript\n//example: log to console '9.3 is float' if x is float\nvar x = 9.3 ;\n_jsy(x).ifisFloat().log(x+ ' is float');\n```\n\n\ncheck if **x** equal to the internal variable\n```javascript\n.equal(x)\n```\n```javascript\n//example: return true if the animals varibale equal to ['puppy', 'cow', 'cat']\nvar animals = ['puppy', 'cow', 'cat'];\nalert(_jsy(animals ).equal(['puppy', 'cow', 'cat']));\n```\nrun function if **x** equal to the internal variable\n```javascript\n.ifEqual(x)\n```\n```javascript\n//example: console to log \"9 is equal to 9\" if the randomumber is equal to 9\nvar randomumber = 9 ;\n_jsy(randomumber).ifEqual(9).then(function(){\n\tconsole.log(randomumber +' is equal to 9');\n});\n```\n\nreturn true if the internal variable has rows\n```javascript\n.hasRows()\n```\n```javascript\n//example: return true if the animals varibale has rows\nvar animals = ['puppy', 'cow', 'cat'];\nalert(_jsy(animals ).hasRows());\n```\nreturn true if the length\tof the internal variable between  **min** and **max**\n```javascript\n.lengthBetween(min, max)\n```\n\n```javascript\n//example : alert true if the length of the string between 5 and 9\nvar lastname = \"labidi\";\nalert(_jsy(lastname).lengthBetween(5,9));\n\n```\n\nrun function if the length of the internal variable between  **min** and **max**\n```javascript\n.ifLengthBetween(min, max)\n```\n```javascript\n//example : alert true if the length of the string between 5 and 9\nvar lastname = \"labidi\";\n_jsy(lastname).ifLengthBetween(5,9).alert(\"true\");\n\n```\n\nreturn true if the internal variable is email\n```javascript\n.isEmail()\n```\n```javascript\n//example : alert true if the variable input is an email\nvar input = \"exemple@server.com\";\nalert(_jsy(input ).isEmail());\n```\n\n\nrun function if the internal variable is an email\n```javascript\n.ifisEmail()\n```\n```javascript\n//example : alert true if the variable input is an email\n\nvar input = \"exemple@server.com\";\n_jsy(input).ifisEmail().alert(\"true\");\n\n```\n\nreturn true if the internal variable is integer\n\n```javascript\n.isInt()\n```\n\n```javascript\n//example: alert true if x is float\nvar x = 7 ;\nalert(_jsy(x).isInt());\n```\nrun function if the internal variable is float\n\n```javascript\n.ifisInt()\n```\n```javascript\n//example: log to console '7 is integer' if x is integer\nvar x = 7;\n_jsy(x).ifisInt().log(x+ ' is integer');\n```\n\nreturn true if the internal variable is negative\n\n```javascript\n.isNegative()\n```\n\n```javascript\n//example: alert true if x is negative\nvar x = -3 ;\nalert(_jsy(x).isNegative());\n```\n\nrun function if the internal variable is negative\n\n```javascript\n.ifisNegative()\n```\n```javascript\n//example: alert -3 if x is negative\nvar x = -3 ;\n_jsy(x).ifisNegative().alert();\n```\n\nreturn true if the internal variable is negative\n\n```javascript\n.isPositive()\n```\n\n```javascript\n//example: alert true if x is positive\nvar x = 3 ;\nalert(_jsy(x).isPositive());\n```\n\nrun function if the internal variable is positive\n\n```javascript\n.ifisPositive()\n```\n```javascript\n//example: alert 8 if x is positive\nvar x = 8 ;\n_jsy(x).ifisPositive().alert();\n```\n\nalert the internal variable or the argument if the internal condition is true or not defined\n```javascript\n.alert()\n```\n\n```javascript\n//example: \n//alert 8\nvar x = 8 ;\n_jsy(x).alert();\n//alert equal if x is equal to 8\n_jsy(x).ifEqual(8).alert('equal');\n//alert 8 if x is equak to 8\n_jsy(x).ifEqual(8).alert();\n```\n\nlog to console the internal variable or the argument if the internal condition is true or not defined\n```javascript\n.log()\n```\n\n```javascript\n//example: \n//log to console \"jhon\"\nvar name = \"jhon\" ;\n_jsy(name ).log();\n//log to console equal if name is equal to \"jhon\"\n_jsy(name).ifEqual(\"jhon\").log('equal');\n//log to console \"jhon\" if name is equak to \"jhon\"\n_jsy(name).ifEqual(\"jhon\").log();\n```\n\nrun function if the internal condition is true\n```javascript\n.then(func)\n```\n```javascript\n//example: console to log true if the randomumber is equal to 9\nvar randomumber = 9 ;\n_jsy(randomumber).ifEqual(9).then(function(){\n\tconsole.log(randomumber +' is equal to 9');\n});\n```\n\nrun function if the internal condition is true\n```javascript\n.else(func)\n```\n```javascript\n//example: console to log \"9 is not equal to -1\" if the randomumber is not equal to nextnumber \nvar randomumber = 9 ;\nvar nextnumber = -1 ; \n_jsy(randomumber).ifEqual(nextnumber).then(function(){\n\tconsole.log(randomumber +' is equal to '+nextnumber);\n}).else(function(){\n\tconsole.log(randomumber +' is not equal to '+nextnumber);\n});\n```\nlike finally, run a function when all the treatments ended\n\n```javascript\n.end(func)\n```\n```javascript\n//example: console to log \"9 is equal to 9\" if the randomumber is equal to 9, console \"end\"\nvar randomumber = 9 ;\n_jsy(randomumber).ifEqual(9).then(function(){\n\tconsole.log(randomumber +' is equal to 9');\n}).end(function(){\n\tconsole.log(\"end\")\n});\n```",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/labidiaymen/jsy.git"
  },
  "bugs": {
    "url": "https://github.com/labidiaymen/jsy/issues"
  },
  "_id": "jsy@0.0.23",
  "scripts": {},
  "_shasum": "e7a4053578f2f88eab193af1df7b199418aaf40e",
  "_from": "jsy@*"
}
